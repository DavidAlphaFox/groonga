plugin_register sharding
[[0,0.0,0.0],true]
table_create Logs_20150203 TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs_20150203 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
table_create Logs_20150204 TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs_20150204 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
table_create Logs TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs original_id COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
column_create Logs timestamp_text COLUMN_SCALAR ShortText
[[0,0.0,0.0],true]
load --table Logs_20150203
[
{
  "_key": "2015-02-03:1",
  "timestamp": "2015-02-03 10:49:00"
},
{
  "_key": "2015-02-03:2",
  "timestamp": "2015-02-03 12:49:00"
}
]
[[0,0.0,0.0],2]
load --table Logs_20150204
[
{
  "_key": "2015-02-04:1",
  "timestamp": "2015-02-04 00:00:00"
}
]
[[0,0.0,0.0],1]
logical_select   --logical_table Logs   --shard_key timestamp   --load_table Logs   --load_columns "original_id, _key, timestamp_text, _key"   --load_values "_id, _id, timestamp, _id"
[
  [
    [
      -22,
      0.0,
      0.0
    ],
    "invalid argument: <[output-columns][apply] _key is specified multiple times: [<Logs.original_id>, #<accessor _key(Logs)>, <Logs"
  ]
]
#|e| [output-columns][apply] _key is specified multiple times: [<Logs.original_id>, #<accessor _key(Logs)>, <Logs.timestamp_text>, #<accessor _key(Logs)>]
select --table Logs
[
  [
    0,
    0.0,
    0.0
  ],
  [
    [
      [
        0
      ],
      [
        [
          "_id",
          "UInt32"
        ],
        [
          "_key",
          "ShortText"
        ],
        [
          "original_id",
          "UInt32"
        ],
        [
          "timestamp_text",
          "ShortText"
        ]
      ]
    ]
  ]
]
